<?php
/**
 * Implements of hook_menu
 */
function ers_bulk_upload_menu() {
	$items = array();
	$items['admin/config/system/bulkimport'] = array(
			'title' => 'Import Students, Subjects and Marks',
			'description' => 'Bulk Import Student, Subject and Student Marks',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('_ers_bulk_upload_callback'),
			'access arguments' => array('access administration pages'),
			'type' => MENU_NORMAL_ITEM,
	);
	return $items;
}

function _ers_bulk_upload_callback($form, &$form_state) {
  $form['select_option'] = array(
  	'#type' => 'select',
  	'#title' => t("Select Bulk Upload Option"),
  	'#options' => array('student' => t("Student"), 'subject' => t("Subject"), 'marks' => t("Student Marks")),
  );
  $form['upload_file'] = array(
  	'#type' => 'managed_file',
    '#title' => t('Browse a file'),
    '#progress_message' => t('Please wait...'),
    '#progress_indicator' => 'bar',
    '#description' => t('Click "Browse..." to select an Excel sheet .csv to upload.'),
    '#required' => TRUE,
    '#upload_location' => 'public://',
  	'#upload_validators' => array('file_validate_extensions' => array('csv')),
  	'#required' => TRUE,
  );
  $form['submit'] = array(
  	'#type' => 'submit',
  	'#value' => 'Import',
  );
  return $form;
}

function _ers_bulk_upload_callback_submit($form, &$form_state) {
	$file = file_load($form_state['values']['upload_file']);
	$file_name = drupal_realpath($file->uri);
	if ($form_state['values']['select_option'] == "marks") {
		_ers_bulk_upload_marks($file_name);
	}
	else if ($form_state['values']['select_option'] == "student") {
		_ers_bulk_upload_student($file_name);
	}
	else if ($form_state['values']['select_option'] == "subject") {
		_ers_bulk_upload_subject($file_name);
	}
}

function _ers_bulk_upload_student($file) {
	$row = 1;
	if (($handle = fopen($file, "r")) !== FALSE) {
		while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
			$num = count($data);
			if ($row > 1) {
				if (!empty($num)) {
					if (!empty($data[0]) && !empty($data[1]) && !empty($data[2]) && !empty($data[3]) && !empty($data[4]) && !empty($data[5]) && !empty($data[6]) && !empty($data[7])) {
						$node = new stdClass();
						$node->type = 'student';
						node_object_prepare($node);
						$node->language = 'en';
						$node->title = $data[2];
						$node->field_stu_roll_no['und'][0]['value'] = $data[0];
						$node->field_stu_reg_no['und'][0]['value'] = $data[1];
						$node->field_student_name['und'][0]['value'] = $data[2];
						$sql_section = "SELECT tid FROM taxonomy_term_data WHERE name = '" . trim($data[3]) . "'";
						$res_section = db_query($sql_section)->fetchAssoc();
						if (!empty($res_section['tid'])) {
							$node->field_section['und'][0]['tid'] = $res_section['tid'];
						}
						$sql_parent_tid = "SELECT tid FROM taxonomy_term_data WHERE name = '" . $data[4] . "'";
						$res_parnet_tid = db_query($sql_parent_tid)->fetchAssoc();
						if (!empty($res_parnet_tid['tid'])) {
							$sql_first_child_tid = "SELECT taxonomy_term_data.tid FROM taxonomy_term_data JOIN taxonomy_term_hierarchy ON taxonomy_term_hierarchy.tid = taxonomy_term_data.tid WHERE taxonomy_term_data.name = '" . $data[5] . "' AND taxonomy_term_hierarchy.parent = '" . $res_parnet_tid['tid'] . "'";
							$res_first_child_tid = db_query($sql_first_child_tid)->fetchAssoc();
							if ($res_first_child_tid['tid']) {
								$sql_second_child_tid = "SELECT taxonomy_term_data.tid FROM taxonomy_term_data JOIN taxonomy_term_hierarchy ON taxonomy_term_hierarchy.tid = taxonomy_term_data.tid WHERE taxonomy_term_data.name = '0" . intval($data[6]) . "' AND taxonomy_term_hierarchy.parent = '" . $res_first_child_tid['tid'] . "'";
								$res_second_child_tid = db_query($sql_second_child_tid)->fetchAssoc();
								if (!empty($res_second_child_tid['tid'])) {
									$node->field_branch['und'][0]['tid'] = $res_second_child_tid['tid'];
								}
							}
						}
						$sql_academic_year = "SELECT tid FROM taxonomy_term_data WHERE name = '" . trim($data[7]) . "'";
						$res_academic_year = db_query($sql_academic_year)->fetchAssoc();
						if (!empty($res_academic_year['tid'])) {
							$node->field_academic_year['und'][0]['tid'] = $res_academic_year['tid'];
						}
						node_save($node);
					}
				}
			}
			$row++;
		}
	}
	fclose($handle);
	drupal_set_message(t("Imported all student records"));
}

function _ers_bulk_upload_subject($file) {
	$row = 1;
	if (($handle = fopen($file, "r")) !== FALSE) {
		while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
			$num = count($data);
			if ($row > 1) {
				if (!empty($num)) {
					if (!empty($data[0]) && !empty($data[1]) && !empty($data[2]) && !empty($data[3]) && !empty($data[4]) && !empty($data[5]) && !empty($data[6])) {
						$node = new stdClass();
						$node->type = 'subject';
						node_object_prepare($node);
						$node->language = 'en';
						$node->title = $data[0] . '-' . $data[1];
						$node->field_subject_code['und'][0]['value'] = $data[0];
						$node->field_subject_name['und'][0]['value'] = $data[1];
						$sql_parent_tid = "SELECT tid FROM taxonomy_term_data WHERE name = '" . $data[2] . "'";
						$res_parnet_tid = db_query($sql_parent_tid)->fetchAssoc();
						if (!empty($res_parnet_tid['tid'])) {
							$sql_first_child_tid = "SELECT taxonomy_term_data.tid FROM taxonomy_term_data JOIN taxonomy_term_hierarchy ON taxonomy_term_hierarchy.tid = taxonomy_term_data.tid WHERE taxonomy_term_data.name = '" . $data[3] . "' AND taxonomy_term_hierarchy.parent = '" . $res_parnet_tid['tid'] . "'";
							$res_first_child_tid = db_query($sql_first_child_tid)->fetchAssoc();
							if ($res_first_child_tid['tid']) {
								$sql_second_child_tid = "SELECT taxonomy_term_data.tid FROM taxonomy_term_data JOIN taxonomy_term_hierarchy ON taxonomy_term_hierarchy.tid = taxonomy_term_data.tid WHERE taxonomy_term_data.name = '0" . intval($data[4]) . "' AND taxonomy_term_hierarchy.parent = '" . $res_first_child_tid['tid'] . "'";
								$res_second_child_tid = db_query($sql_second_child_tid)->fetchAssoc();
								if (!empty($res_second_child_tid['tid'])) {
									$node->field_branch['und'][0]['tid'] = $res_second_child_tid['tid'];
								}
							}
						}
						$section = explode(",", $data[5]);
						$staffs = explode(",", $data[6]);
						for ($i = 0; $i < count($section); $i++) {
							$field_collection_item = _ers_bulk_upload_subject_save_field_collection($section[$i], $staffs[$i], $node);
							$field_collection_item->save();
						}
						node_save($node);
					}
				}
			}
			$row++;
		}
	}
	fclose($handle);
	drupal_set_message(t("Imported all subject records"));
}

function _ers_bulk_upload_subject_save_field_collection($section, $staff, $node) {
	$sql_section = "SELECT tid FROM taxonomy_term_data WHERE name = '" . trim($section) . "'";
	$res_section = db_query($sql_section)->fetchAssoc();
	$sql_staff = "SELECT tid FROM taxonomy_term_data WHERE name = '" . trim($staff) . "'";
	$res_staff = db_query($sql_staff)->fetchAssoc();
	$field_collection_item = entity_create('field_collection_item', array('field_name' => 'field_sub_section_staff'));
	$field_collection_item->setHostEntity('node', $node);
	$field_langcode = LANGUAGE_NONE;
	if (!empty($res_section['tid'])) {
		$field_collection_item->field_fc_sub_section[$field_langcode][]['tid'] = $res_section['tid'];
	}
	if (!empty($res_staff['tid'])) {
		$field_collection_item->field_fc_sub_staff[$field_langcode][]['tid'] = $res_staff['tid'];
	}
	return $field_collection_item;
}

function _ers_bulk_upload_marks($file) {
	$row = 1;
	if (($handle = fopen($file, "r")) !== FALSE) {
		while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
			$num = count($data);
			if ($row > 1) {
				if (!empty($num)) {
					if (!empty($data[0]) && !empty($data[1])) {
						$subject_nid = 0;
						$student_nid = 0;
						$sql_student = "SELECT entity_id FROM field_data_field_stu_roll_no WHERE field_stu_roll_no_value = '" . $data[1] . "'";
						$res_student = db_query($sql_student)->fetchAssoc();
						if (!empty($res_student['entity_id'])) {
							$student_nid = $res_student['entity_id'];
						}
						$sql_subject = "SELECT entity_id FROM field_data_field_subject_code WHERE field_subject_code_value = '" . $data[0] . "'";
						$res_subject = db_query($sql_subject)->fetchAssoc();
						if (!empty($res_subject['entity_id'])) {
							$subject_nid = $res_subject['entity_id'];
						}
						if ($subject_nid > 0 && $student_nid > 0) {
							$sql_branch = "SELECT field_branch_tid	 FROM field_data_field_branch WHERE entity_id = '" . $student_nid . "'";
							$res_branch = db_query($sql_branch)->fetchAssoc();
							$mark_node = new stdClass();
							$mark_node->type = 'mark';
							node_object_prepare($mark_node);
							$mark_node->language = 'en';
							if (!empty($res_branch['field_branch_tid'])) {
								$mark_node->field_branch['und'][0]['tid'] = $res_branch['field_branch_tid'];
							}
	
							$mark_node->field_mark_student['und'][0]['nid'] = $student_nid;
							$mark_node->field_mark_subject['und'][0]['nid'] = $subject_nid;
							$mark_node->field_mark_score['und'][0]['value'] = intval($data[3]);
							node_save($mark_node);
						}
					}
				}
			}
			$row++;
		}
		fclose($handle);
		drupal_set_message(t("Imported all mark records"));
	}
}